name: 'Release Please'

on:
  push:
    branches: [ 'master' ]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  release-please:
    name: 'Release Please'
    runs-on: [ 'ubuntu-latest' ]
    steps:
      - name: 'Generate App Token'
        uses: actions/create-github-app-token@v1
        id: generate-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID}}
          private-key: ${{ secrets.RELEASE_APP_PRIVATE_KEY }}
      - name: 'Run release-please'
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json

  release-pkg:
    name: 'Release Nuget Package'
    runs-on: [ 'ubuntu-latest' ]
    needs: 'release-please'
    if: ${{ needs.release-please.outputs.release_created }}
    timeout-minutes: 15 # When the GH packages are down this can take a while. Auto-cancel & retry manually afterward if needed.
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v4
      - name: 'Setup .NET'
        uses: actions/setup-dotnet@v4
        with:
          # renovate: datasource=dotnet depName=dotnet-sdk
          dotnet-version: 8.0.403
      - name: 'Restore dependencies'
        run: dotnet restore
      - name: 'Build'
        run: dotnet build MiraklApi.Client/MiraklApi.Client.csproj --no-restore --configuration Release -v m
      - name: 'Pack'
        run: dotnet pack MiraklApi.Client/MiraklApi.Client.csproj --no-build --no-restore --configuration Release -v m -o ./artifacts
      - name: 'Push to Nuget'
        run: dotnet nuget push ./artifacts/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate
      - name: 'Add GitHub package source'
        run: |
          dotnet nuget add source \
          --username ${{ github.repository_owner }} \
          --password ${{ secrets.GITHUB_TOKEN }} \
          --store-password-in-clear-text \
          --name GitHub "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
      - name: 'Push to GitHub Packages'
        run: dotnet nuget push ./artifacts/*.nupkg --source 'GitHub' --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
      - name: 'Upload nuget pgk to GitHub Release'
        run: gh release upload '${{ needs.release-please.outputs.tag_name }}' ./artifacts/*.nupkg
      - name: 'Upload nuget pgk as artifact'
        uses: actions/upload-artifact@v4
        with:
          name: 'MiraklApi.Client.Package'
          path: ./artifacts/*.nupkg
          compression-level: 0
          if-no-files-found: error
          retention-days: 7

  actions-timeline:
    name: 'Generate Actions Timeline'
    runs-on: [ 'ubuntu-latest' ]
    needs: ['release-pkg', 'release-please']
    timeout-minutes: 3
    steps:
      - name: 'Generate Actions Timeline'
        uses: Kesin11/actions-timeline@v2
        with:
          show-waiting-runner: 'true'